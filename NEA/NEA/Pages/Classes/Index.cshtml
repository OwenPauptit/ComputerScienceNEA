@page

@model NEA.Pages.Classes.IndexModel

@{
    ViewData["Title"] = "Classes";
    Layout = "~/Pages/Shared/_Layout.cshtml";
}

<h1>Classes</h1>

@if ((await AuthorizationService.AuthorizeAsync(
User,
new Classroom { UserID = UserManager.GetUserId(User) },
Operations.CreateClass)).Succeeded)
{
    <p>
        <a asp-page="Create">Create New</a>
    </p>
}
else if ((await AuthorizationService.AuthorizeAsync(
User,
new Classroom { ClassroomID = "-1" },
Operations.Enroll)).Succeeded)
{
    <p>
        <a asp-page="/Enrollments/Create">Enroll in new class</a>
    </p>
}
<table class="table">
    <thead>
        <tr>
            <th>Class Name</th>
            @if (User.IsInRole(Authorization.Constants.StudentRole))
            {
                <th>Teacher</th>
            }
            else
            {
                <th>Number of Students</th>
            }
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.ClassroomData.Classrooms)
        {
            var selectedRow = "";
            if (item.ClassroomID == Model.ClassID)
            {
                selectedRow = "table-success";
            }

            <tr class="@selectedRow">
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                @if (User.IsInRole(Authorization.Constants.StudentRole))
                {
                    <td>
                        @Html.DisplayFor(modelItem => item.Teacher.LastName)
                    </td>
                }
                else
                {
                    <td>
                        @item.Enrollments.Count()
                    </td>
                }
                <td>
                    <a asp-page="./Index" asp-route-classId="@item.ClassroomID">Select</a> |

                    @if ((await AuthorizationService.AuthorizeAsync(User, item, Operations.EditClass)).Succeeded)
                    {
                        <a asp-page="./Edit" asp-route-id="@item.ClassroomID">Edit</a>
                        <text> | </text>
                    }

                    <a asp-page="./Details" asp-route-id="@item.ClassroomID">Details</a>

                    @if ((await AuthorizationService.AuthorizeAsync(User, item, Operations.DeleteClass)).Succeeded)
                    {

                        <text> | </text>
                        <a asp-page="./Delete" asp-route-id="@item.ClassroomID">Delete</a>
                    }
                </td>
            </tr>
        }
    </tbody>
</table>

@if (Model.ClassroomData.ClassAssignments != null)
{
    <h3>Assignments from selected class</h3>

    @if ((await AuthorizationService.AuthorizeAsync(User,
        new ClassAssignment { ClassroomID = Model.ClassID },
        Operations.CreateAssignment)).Succeeded)
    {
        <p>
            <a asp-page="/Assignments/Create" asp-route-classId="@Model.ClassID">Create New</a>
        </p>
    }

    <table class="table">
        <tr>
            <th></th>
            <th>Simulation Name</th>
            <th>Date Set</th>
            <th>Date Due</th>
        </tr>

        @foreach (var item in Model.ClassroomData.ClassAssignments)
        {
            var selectedRow = "";
            if (item.SimulationID == Model.SimulatorID)
            {
                selectedRow = "table-success";
            }
            <tr class="@selectedRow">
                <td>
                    <a asp-page="./Index"
                       asp-route-classId="@item.ClassroomID"
                       asp-route-simId="@item.SimulationID">Select</a> |

                    @if ((await AuthorizationService.AuthorizeAsync(User, item, Operations.EditAssignment)).Succeeded)
                    {
                        <a asp-page="/Assignments/Edit" 
                           asp-route-classId="@item.ClassroomID" 
                           asp-route-simId="@item.SimulationID">Edit</a>
                        <text> | </text>
                    }

                    <a asp-page="/Assignments/Details" 
                       asp-route-classId="@item.ClassroomID" 
                       asp-route-simId="@item.SimulationID">Details</a>

                    @if ((await AuthorizationService.AuthorizeAsync(User, item, Operations.DeleteAssignment)).Succeeded)
                    {

                        <text> | </text>
                        <a asp-page="/Assignments/Delete" 
                       asp-route-classId="@item.ClassroomID" 
                       asp-route-simId="@item.SimulationID">Delete</a>
                    }
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Simulation.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.DateSet)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.DateDue)
                </td>
            </tr>
        }
    </table>
}

@if (Model.ClassroomData.StudentAssignments != null)
{
    @if (User.IsInRole(Authorization.Constants.StudentRole))
    {
        <h3>Your data for selected assignment</h3>
    }
    else
    {
        <h3>Student data for selected assignment</h3>
    }

    <table class="table">
        <tr>
            @if (User.IsInRole(Authorization.Constants.TeacherRole))
            {
                <th>Name</th>
            }
            <th>Percentage</th>
            <th>Date Completed</th>
            @if ((await AuthorizationService.AuthorizeAsync
                (User,
                new StudentAssignment { UserID = UserManager.GetUserId(User) },
                Operations.CompleteAssignment)).Succeeded)
            {
                <th></th>
            }
        </tr>

        @foreach (var item in Model.ClassroomData.StudentAssignments)
        {
            <tr>
                @if (User.IsInRole(Authorization.Constants.TeacherRole))
                {
                    <td>
                        @Html.DisplayFor(modelItem => item.StudentName)
                    </td>
                }
                <td>
                    @Html.DisplayFor(modelItem => item.Percentage)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.DateCompleted)
                </td>
                @if ((await AuthorizationService.AuthorizeAsync
                 (User,
                 new StudentAssignment { UserID = UserManager.GetUserId(User) },
                 Operations.CompleteAssignment)).Succeeded)
                {
                    <td>
                        <a asp-page="/StudentAssignments/Create"
                           asp-route-simId="@item.SimulationID">
                            Complete Assignment Now
                        </a>
                    </td>
                }
            </tr>
        }
    </table>
}

