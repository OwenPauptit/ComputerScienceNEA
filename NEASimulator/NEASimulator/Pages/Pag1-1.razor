@page "/pag1-1"

<SimulationPage Preset="preset" Available="available" />


@code{

    private Models.SaveState preset = new Models.SaveState();
    private List<Models.AvailableApparatus> available = new List<Models.AvailableApparatus>();

    protected override void OnAfterRender(bool firstRender)
    {
        base.OnAfterRender(firstRender);
        if (firstRender)
        {
            preset.Objects.AddRange(
                new List<Interfaces.IDisplayObject> {
                    new NEASimulator.Models.Apparatus.Ball(new System.Numerics.Vector2 { X = 400, Y = 150 }, false),
                    new NEASimulator.Models.Apparatus.Plank(new System.Numerics.Vector2 { X = 400, Y = 800 }, Models.Apparatus.Plank.Type.Horizontal, false),

                    new NEASimulator.Models.Apparatus.Ball(new System.Numerics.Vector2 { X = 1100, Y = 240 }, false),
                    new NEASimulator.Models.Apparatus.Plank(new System.Numerics.Vector2 { X = 1100, Y = 800 }, Models.Apparatus.Plank.Type.Horizontal, false),
                    new NEASimulator.Models.Apparatus.MetreStick(new System.Numerics.Vector2 { X = 1100, Y = 540}, false)
                    }
            );

            preset.Sensors.AddRange(
                new List<Interfaces.ISensor>
                {
                    new NEASimulator.Models.Apparatus.LightGate(new System.Numerics.Vector2(400, 300), false),
                    new NEASimulator.Models.Apparatus.LightGate(new System.Numerics.Vector2(400, 600), false)
                    }
            );

            preset.DataLoggers.Add(new Models.Apparatus.DataLogger(new System.Numerics.Vector2(700, 500), false));

            preset.Edges.AddRange(
                new List<Models.Edge>
                {
                    new Models.Edge() { datalogger = preset.DataLoggers[0], sensor = preset.Sensors[0], portnum = 0 },
                    new Models.Edge() { datalogger = preset.DataLoggers[0], sensor = preset.Sensors[1], portnum = 1 }
                    }
            );

            preset.Stopwatches.Add(new Models.Apparatus.UserStopwatch(new System.Numerics.Vector2(1100, 100), false));

        }
    }
}